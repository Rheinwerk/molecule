ARG OS_VERSION=13

FROM debian:${OS_VERSION}

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
   && apt-get install -y --no-install-recommends \
      ca-certificates \
      man-db \
      openssh-server \
      python3 \
      python3-apt \
      python3-debian \
      python3-jmespath \
      systemd \
      systemd-sysv \
      systemd-timesyncd \
      wget \
   && apt-get clean \
   && rm -Rf /var/lib/apt/lists/* \
   && rm -Rf /usr/share/doc && find /usr/share/man -type f -delete \
   && rm -rf /tmp/* /var/tmp/* ; \
      rm -rf /lib/systemd/system/multi-user.target.wants/* ; \
      rm -rf /etc/systemd/system/*.wants/* ; \
      rm -rf /lib/systemd/system/local-fs.target.wants/* ; \
      rm -rf /lib/systemd/system/sockets.target.wants/*udev* ; \
      rm -rf /lib/systemd/system/sockets.target.wants/*initctl* ; \
      rm -rf /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup* ; \
      rm -rf /lib/systemd/system/systemd-update-utmp* ; \
      rm -rf /lib/systemd/system/getty.target \
      && rm -f /usr/lib/python3.*/EXTERNALLY-MANAGED

# Create cd-admin user
RUN useradd -m -s /bin/bash cd-admin

# Pre-configure Docker daemon for DinD compatibility
RUN mkdir -p /etc/docker && \
    echo '{"features": {"containerd-snapshotter": false}}' > /etc/docker/daemon.json

CMD ["/lib/systemd/systemd"]
