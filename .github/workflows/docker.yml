---
name: Docker build and push

on:
  schedule:
    - cron: "0 4 * * 0"
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
      - 'master'
  push:
    branches:
      - 'main'
      - 'master'
    tags:
      - 'v*'
    paths:
      - 'dockerfiles/**'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/rheinwerk/molecule

jobs:
  docker:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: dockerfiles/Lint
            image_tag: lint
            os_version: "3.22"
          - dockerfile: dockerfiles/Debian
            image_tag: pkr-debian-12
            os_version: "12"
          - dockerfile: dockerfiles/Debian
            image_tag: pkr-debian-13
            os_version: "13"
          - dockerfile: dockerfiles/Ubuntu
            image_tag: pkr-ubuntu-2204
            os_version: "22.04"
          - dockerfile: dockerfiles/Ubuntu
            image_tag: pkr-ubuntu-2404
            os_version: "24.04"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}
          tags: |
            type=raw,value=${{ matrix.image_tag }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: dockerfiles
          file: ${{ matrix.dockerfile }}
          build-args: OS_VERSION=${{ matrix.os_version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
